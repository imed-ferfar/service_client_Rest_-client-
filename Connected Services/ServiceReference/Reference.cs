//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client1_Csharp.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Demande", Namespace="http://schemas.datacontract.org/2004/07/ServeurActivite_Csharp_java")]
    [System.SerializableAttribute()]
    public partial class Demande : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string host {
            get {
                return this.hostField;
            }
            set {
                if ((object.ReferenceEquals(this.hostField, value) != true)) {
                    this.hostField = value;
                    this.RaisePropertyChanged("host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                if ((this.timeStampField.Equals(value) != true)) {
                    this.timeStampField = value;
                    this.RaisePropertyChanged("timeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int year {
            get {
                return this.yearField;
            }
            set {
                if ((this.yearField.Equals(value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IAffichageService")]
    public interface IAffichageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAffichageService/AfficherMessage", ReplyAction="http://tempuri.org/IAffichageService/AfficherMessageResponse")]
        string AfficherMessage(Client1_Csharp.ServiceReference.Demande dem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAffichageService/AfficherMessage", ReplyAction="http://tempuri.org/IAffichageService/AfficherMessageResponse")]
        System.Threading.Tasks.Task<string> AfficherMessageAsync(Client1_Csharp.ServiceReference.Demande dem);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAffichageServiceChannel : Client1_Csharp.ServiceReference.IAffichageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AffichageServiceClient : System.ServiceModel.ClientBase<Client1_Csharp.ServiceReference.IAffichageService>, Client1_Csharp.ServiceReference.IAffichageService {
        
        public AffichageServiceClient() {
        }
        
        public AffichageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AffichageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AffichageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AffichageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AfficherMessage(Client1_Csharp.ServiceReference.Demande dem) {
            return base.Channel.AfficherMessage(dem);
        }
        
        public System.Threading.Tasks.Task<string> AfficherMessageAsync(Client1_Csharp.ServiceReference.Demande dem) {
            return base.Channel.AfficherMessageAsync(dem);
        }
    }
}
